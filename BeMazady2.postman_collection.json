{
	"info": {
		"_postman_id": "85a64edc-62a2-4321-bca7-8034da5654a4",
		"name": "BeMazady2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43253951",
		"_collection_link": "https://broke-egyptians.postman.co/workspace/broke-egyptians-Workspace~771a169e-2880-4607-823a-486af4179420/collection/31711879-85a64edc-62a2-4321-bca7-8034da5654a4?action=share&source=collection_link&creator=43253951"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"JWT\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"youssef\",\r\n  \"last_name\": \"hussain\",\r\n  \"username\": \"usef143\",\r\n  \"email\": \"youssef.hussain9000@gmail.com\",\r\n  \"password\": \"password123\",\r\n  \"phone_number\": \"01115771845\",\r\n  \"national_id\": \"30333333333334\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"JWT\", pm.response.json().token);\r",
									"pm.environment.set(\"user_id\", pm.response.json().data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@example.com\",\r\n    \"password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "forgot password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"youssef.hussain9000@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/forgotpassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"forgotpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify password code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resetCode\": \"626931\"\r\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/verify",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"JWT\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"youssef.hussain9000@gmail.com\",\r\n  \"newPassword\": \"NewStrongPass123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/resetpassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"resetpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"572631\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/verify-email",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "resend verification code",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"youssef.hussain9000@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/Auth/resend-verification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"Auth",
								"resend-verification"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"category_id\", pm.response.json().data._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2RjNmZmNzQ0MTExYjVkMmQzNTczMmYiLCJpYXQiOjE3NDI1MDI2MTMsImV4cCI6MTc0MjU4OTAxM30.SAJ6JahtLzN3bbhe7BxEiMCWHAAsFyg64c_hMiAVH2w",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Electroincs",
									"type": "text"
								},
								{
									"key": "categoryImage",
									"type": "file",
									"src": "/C:/Users/youss/Desktop/redund/elec.png"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/categories?page=1&limit=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get category by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/categories/{{category_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update category by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "test update",
									"type": "text"
								},
								{
									"key": "categoryImage",
									"type": "file",
									"src": "/C:/Users/youss/Pictures/Screenshots/Screenshot 2025-02-08 215942.png"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/categories/{{category_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete category by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/categories/{{category_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all categories with filters,sorting,etc",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/categories?sort=name&fields=name, categoryImage&page=1&limit=10&keyword=sports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"categories"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"description": "sorts asc if u use a value like name, createdat 3ady.\nsort desc if u user -name , -createdAtto get latest"
								},
								{
									"key": "fields",
									"value": "name, categoryImage",
									"description": "feild returning feilds, u want name only, img only and so on"
								},
								{
									"key": "page",
									"value": "1",
									"description": "choose page"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "kam item per page"
								},
								{
									"key": "keyword",
									"value": "sports",
									"description": "search with regex"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subcateory",
			"item": [
				{
					"name": "Create Subcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"subcategory_id\", pm.response.json().data._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"testing_final\",\n  \"category\": \"{{category_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/subcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all subcategories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/subcategories?page=1&limit=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get subcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/subcategories/{{subcategory_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories",
								"{{subcategory_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update subcategory",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Apple\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/subcategories/{{subcategory_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories",
								"{{subcategory_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "testupdate",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete subcategory",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/subcategories/{{subcategory_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories",
								"{{subcategory_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get a list of subcategories for a specific category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/subcategories/category/{{category_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"subcategories",
								"category",
								"{{category_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Items",
			"item": [
				{
					"name": "Create Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"if (response && response.data && response.data._id) {\r",
									"    pm.environment.set(\"item_id\", response.data._id);\r",
									"} else {\r",
									"    console.log(\"Item ID not found in response\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Haroun",
									"type": "text"
								},
								{
									"key": "item_status",
									"value": "available",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "A young tasty alex boy",
									"type": "text"
								},
								{
									"key": "price",
									"value": "15",
									"type": "text"
								},
								{
									"key": "is_featured",
									"value": "true",
									"type": "text",
									"disabled": true
								},
								{
									"key": "item_cover",
									"type": "file",
									"src": "postman-cloud:///1f0076f5-7a2d-49a0-b667-8bcce6f1089c"
								},
								{
									"key": "item_pictures",
									"type": "file",
									"src": [
										"postman-cloud:///1f0076f6-0088-4220-b0d6-74ab4c8f765f",
										"postman-cloud:///1f0076f5-fdcb-4730-ad3a-a94b61b7c40a",
										"postman-cloud:///1f0076f5-f996-4ca0-a4ac-2b0c737429ae",
										"postman-cloud:///1f0076f5-fcfb-4ee0-b014-f5e49630086a"
									]
								},
								{
									"key": "category",
									"value": "67e9a9f4b22d1c8b639a1c62",
									"type": "text"
								},
								{
									"key": "subcategory",
									"value": "67e9aaccb6acd9207e93b3ca",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://be-mazady.vercel.app/api/items?page=1&limit=5",
							"protocol": "https",
							"host": [
								"be-mazady",
								"vercel",
								"app"
							],
							"path": [
								"api",
								"items"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Luxury Vintage Watch",
									"type": "text"
								},
								{
									"key": "price",
									"value": "300.99",
									"type": "text"
								},
								{
									"key": "item_status",
									"value": "pending",
									"type": "text"
								},
								{
									"key": "item_cover",
									"type": "file",
									"src": "/C:/Users/youss/Pictures/Screenshots/Screenshot 2025-03-01 174207.png"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all items all filters,sorting,search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/items?keyword=car&fields=title,description,price",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items"
							],
							"query": [
								{
									"key": "item_status",
									"value": "available",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "car"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "default 5",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "deafult 1",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "title,description,price",
									"description": "deafult returns all"
								},
								{
									"key": "sort",
									"value": "price",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "3000",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "100",
									"disabled": true
								},
								{
									"key": "is_featured",
									"value": "true",
									"disabled": true
								},
								{
									"key": "subcategory",
									"value": "67da221e10a972c214983846",
									"disabled": true
								},
								{
									"key": "category",
									"value": "67da221e10a972c214983838",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "Get item reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rating\": 4,\r\n  \"comment\": \"Great product!\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rating\": 3,\r\n  \"comment\": \"Great chair.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/items/{{item_id}}/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"items",
								"{{item_id}}",
								"reviews"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auction",
			"item": [
				{
					"name": "Create Auction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"auction_id\", pm.response.json().data._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "black Nike hooide 2",
									"type": "text"
								},
								{
									"key": "description",
									"value": "a black nike hoodie for men",
									"type": "text"
								},
								{
									"key": "auctionCover",
									"type": "file",
									"src": "/C:/Users/youss/Pictures/Screenshots/Screenshot 2025-04-24 134457.png"
								},
								{
									"key": "auctionImages",
									"type": "file",
									"src": "/C:/Users/youss/Pictures/Screenshots/Screenshot 2025-02-08 215942.png"
								},
								{
									"key": "seller",
									"value": "{{user_id}}",
									"type": "text"
								},
								{
									"key": "startPrice",
									"value": "1000",
									"type": "text"
								},
								{
									"key": "reservePrice",
									"value": "50000",
									"type": "text"
								},
								{
									"key": "buyNowPrice",
									"value": "30000",
									"type": "text"
								},
								{
									"key": "minimumBidIncrement",
									"value": "100",
									"type": "text"
								},
								{
									"key": "endDate",
									"value": "2025-05-01T12:00:00Z",
									"type": "text"
								},
								{
									"key": "category",
									"value": "6808ef1d24ab0ac5a69df4de",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/auctions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Bid",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bidder\": \"{{user_id}}\",\r\n    \"amount\": 12000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}/bid",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}",
								"bid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all auctions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update auction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"buyNowPrice\": 2500,\r\n  \"title\": \"update test\",\r\n  \"endDate\": \"2025-04-01T12:00:00Z\",\r\n  \"status\": \"active\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one auction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "end Auction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}/end",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}",
								"end"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all auctions all filters, sorting , search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions?limit=5&page=1&status=active&fields=title,startPrice,buyNowPrice,description",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "status",
									"value": "active",
									"description": "active, completed, pending ( can use , to for multiple)"
								},
								{
									"key": "keyword",
									"value": "vintage",
									"description": "search",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "title,startPrice,buyNowPrice,description",
									"description": "limit what is returned as output"
								},
								{
									"key": "sort",
									"value": "startPrice",
									"description": "sort asc by typing only name, desc by using -startprice masalan\n\nu can use mutliple at once like\n/api/auctions?sort=-featured,currentPrice,-createdAt\n",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "1000",
									"description": "can compine min and max to get price range\nfor ex: /api/auctions?minPrice=50&maxPrice=200",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "100",
									"disabled": true
								},
								{
									"key": "category",
									"value": "6808ef1d24ab0ac5a69df4de",
									"disabled": true
								},
								{
									"key": "featured",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete auction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "buy now",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/auctions/{{auction_id}}/buy-now",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auctions",
								"{{auction_id}}",
								"buy-now"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_name",
									"value": "usef_update",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "lol",
									"type": "text"
								},
								{
									"key": "username",
									"value": "realusef",
									"type": "text"
								},
								{
									"key": "email",
									"value": "usefusef@example.com",
									"type": "text"
								},
								{
									"key": "address",
									"value": "shubra",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "+12025551234",
									"type": "text"
								},
								{
									"key": "national_id",
									"value": "12345678911114",
									"type": "text"
								},
								{
									"key": "user_picture",
									"type": "file",
									"src": "/C:/Users/youss/Pictures/Screenshots/Screenshot 2025-02-09 000520.png"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user favorites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/favorites",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item to favorite",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"itemId\":\"67da221e10a972c2149838b0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/favorites",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Item from favorite",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/favorites/67da221e10a972c2149838b0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"favorites",
								"67da221e10a972c2149838b0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"role\": \"buyer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "update password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"currentPassword\": \"password123\",\r\n  \"newPassword\": \"Thenigger@me1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/MyProfile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"MyProfile"
							]
						}
					},
					"response": []
				},
				{
					"name": "my auctions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/Myauctions?participated=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"Myauctions"
							],
							"query": [
								{
									"key": "won",
									"value": "true",
									"description": "filter for won auctions",
									"disabled": true
								},
								{
									"key": "participated",
									"value": "true",
									"description": "filter for partcipated but didnt win"
								},
								{
									"key": "seller",
									"value": "true",
									"description": "filter for seller to see his own auctions",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Messaging",
			"item": [
				{
					"name": "Create a New Conversation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"recipientId\": \"6810cf2fa85f1e4bddfb519b\",\r\n \"content\": \"Hello my name is sami, this is my first message!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/messages/conversations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"conversations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/messages/conversations/67dcd1575992ec71c1cd9fd3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"conversations",
								"67dcd1575992ec71c1cd9fd3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Messages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"recipientId\": \"67ddf034a68efb226d74da1b\",\r\n \"content\": \"Hello my name is anwa, this is my first message!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/messages/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark as Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"messageId\": \"67dd47719520be762da0e371\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/messages/conversations/read/67dd47719520be762da0e371",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"conversations",
								"read",
								"67dd47719520be762da0e371"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unread count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/messages/unread-count",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"unread-count"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetConversations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/messages/conversations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"conversations"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMessages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/messages/conversations/682342b1d1417ae074b38547",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"messages",
								"conversations",
								"682342b1d1417ae074b38547"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "createNotification",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2RkZjM0Y2YxMTBjZGJjYTg2ZTUxNGMiLCJyb2xlIjoiYnV5ZXIiLCJpYXQiOjE3NDI1OTkwMDAsImV4cCI6MTc0MjYwMjYwMH0.9EsLiJCvZXBho7W7NiRfkYQmwan7cD8djy_CdIeodIQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"recipientId\": \"67ddf034a68efb226d74da1b\",\r\n  \"message\": \"Your notification message\",\r\n  \"type\": \"info\",\r\n  \"referenceId\": \"67ddf377f110cdbca86e5151\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/notifications/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "MarkAsRead",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2RkNTYyYWRiYzYyZDUzODA2MTI3OTEiLCJyb2xlIjoiYnV5ZXIiLCJpYXQiOjE3NDI1NTg3ODksImV4cCI6MTc0MjU2MjM4OX0.zaPU3OOcY8f-kCDDxq7c0A3f0ofHm0cV72sgjNj0mqg",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/notifications/read/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								"read",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUnreadCount",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2RkZjM0Y2YxMTBjZGJjYTg2ZTUxNGMiLCJyb2xlIjoiYnV5ZXIiLCJpYXQiOjE3NDI1OTkwMDAsImV4cCI6MTc0MjYwMjYwMH0.9EsLiJCvZXBho7W7NiRfkYQmwan7cD8djy_CdIeodIQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/notifications/unread-count",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								"unread-count"
							]
						}
					},
					"response": []
				},
				{
					"name": "MarkAllAsRead",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2RkNzdhMzJhNTEwZTdjMTQ5NjU2NjAiLCJyb2xlIjoiYnV5ZXIiLCJpYXQiOjE3NDI1NjczNTEsImV4cCI6MTc0MjU3MDk1MX0.V9yJGyo06cg-Q-rapS5NwCEbuKGUQOkFOW-jmtRdAdw",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/notifications/read-all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								"read-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserNotifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/notifications/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recommend",
			"item": [
				{
					"name": "get recommend based on item category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/recommendations/67e5cbde1f2de16312613275",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"recommendations",
								"67e5cbde1f2de16312613275"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Get users cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/cart",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "add to cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"itemId\": \"681619723f91747fba41f3b2\",\r\n  \"quantity\": 10\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/cart/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"cart",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove item from cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"itemId\": \"67e9ca0da2cd3fdc13589c5e\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/cart/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"cart",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/cart/clear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"cart",
								"clear"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/cart/checkout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"cart",
								"checkout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "create order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer sk_test_51RK29MRWkgziCIvkhmL15JalinYuHHjuKMD7jQ0CLazKFmO7rL3jNcSZYLGsxx4iFVCknKqf2Syldqz6qJX109mq00BJhFns4w",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Stripe-Signature",
								"value": "whsec_nVOy60atfJrbjTLRTRhBcKEd74SX3222",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"items\": [\r\n    {\r\n      \"itemType\": \"auction\",\r\n      \"item\": \"65f1c28a4b3f8d9c7a1b2c3d\", // Real auction ID\r\n      \"quantity\": 1,\r\n      \"priceAtPurchase\": 150,\r\n      \"seller\": \"65f1c28a4b3f8d9c7a1b2c3e\" // Real user ID\r\n    }\r\n  ],\r\n  \"totalAmount\": 150\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "my orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/orders/my-orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders",
								"my-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "my order with status filtering",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost:3000/api/orders/my-orders?status=paid",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders",
								"my-orders"
							],
							"query": [
								{
									"key": "status",
									"value": "paid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get order by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/orders/6814d3919e8cf4e06b387e9e",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders",
								"6814d3919e8cf4e06b387e9e"
							]
						}
					},
					"response": []
				},
				{
					"name": "all orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/orders/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "AdminUpdateOrderStatus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"shipped\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/orders/681580f31dfd94496730f884/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders",
								"681580f31dfd94496730f884",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "all orders with status filtering",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/orders?status=shipped",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "shipped"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "webhook",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": \"6815744b3c17f04630b5fdb6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/payment/create-checkout-session",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"payment",
								"create-checkout-session"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "analytics",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "overview financal",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/overview",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"overview"
									]
								}
							},
							"response": []
						},
						{
							"name": "financials + filter",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/overview?startDate=2024-01-01&endDate=2024-12-31",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"overview"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2024-01-01"
										},
										{
											"key": "endDate",
											"value": "2024-12-31"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "users + filter",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/users?role=admin",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"users"
									],
									"query": [
										{
											"key": "role",
											"value": "admin"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "items",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/items",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"items"
									]
								}
							},
							"response": []
						},
						{
							"name": "items + filter",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/items?status=available",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"items"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "auctions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/auctions",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"auctions"
									]
								}
							},
							"response": []
						},
						{
							"name": "auctions + filter",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/auctions?status=completed",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"auctions"
									],
									"query": [
										{
											"key": "status",
											"value": "completed"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "top sellers",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/admin/top-sellers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"admin",
										"top-sellers"
									]
								}
							},
							"response": []
						}
					],
					"description": "## 🔒 ADMIN CONTROLLERS\n\n### 📊 `GET /api/analytics/admin/overview`\n\nGives **total revenue and profit** from paid orders, optionally filtered by date.\n\n- Uses MongoDB aggregation to:\n    \n    - Filter only `status: \"paid\"` orders.\n        \n    - Break down order items by `itemType` (`item` or `auction`).\n        \n    - Calculates:\n        \n        - **Revenue**: Sum of all `priceAtPurchase`.\n            \n        - **Profit**: 5% for auctions, 3% for items.\n            \n\n---\n\n### 👥 `GET /api/analytics/admin/users?role=seller`\n\nReturns count of users.\n\n- Optional filter by role (e.g., `seller`, `buyer`, `admin`).\n    \n\n---\n\n### 📦 `GET /api/analytics/admin/items?status=available`\n\nReturns count of items.\n\n- Optional filter by `item_status` (e.g., `available`, `sold`).\n    \n\n---\n\n### 🔨 `GET /api/analytics/admin/auctions?status=completed`\n\nReturns count of auctions.\n\n- Optional filter by auction `status` (e.g., `active`, `completed`).\n    \n\n---\n\n### 🏆 `GET /api/analytics/admin/top-sellers`\n\nReturns top 10 sellers based on total sales.\n\n- Aggregates all paid orders.\n    \n- Groups by seller ID.\n    \n- Calculates:\n    \n    - **Total sales**\n        \n    - **Profit** using the same percentage logic.\n        \n- Joins seller details from `users` collection (`$lookup`).\n    \n- Returns seller username, email, total sales, and profit."
				},
				{
					"name": "Seller",
					"item": [
						{
							"name": "overview",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/seller/overview",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"seller",
										"overview"
									]
								}
							},
							"response": []
						},
						{
							"name": "my items",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/seller/my-items?status=available&page=1&limit=5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"seller",
										"my-items"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "my auctions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/analytics/seller/my-auctions?status=completed&page=1&limit=5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"analytics",
										"seller",
										"my-auctions"
									],
									"query": [
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "## 🛍️ SELLER CONTROLLERS\n\n### 📈 `GET /api/analytics/seller/overview`\n\nDashboard for **current logged-in seller**.\n\n- Gets:\n    \n    - Total **items listed**.\n        \n    - Total **auctions listed**.\n        \n    - **Total items/auctions sold**.\n        \n    - **Total revenue** from sales.\n        \n    - Total Pure profit\n        \n- Uses aggregation to filter seller’s sold items and group by `itemType`.\n    \n\n---\n\n### 📋 `GET /api/analytics/seller/my-items`\n\nReturns paginated list of the seller’s items.\n\n- Optional filter by `status` (e.g., `available`, `sold`).\n    \n- Supports pagination using `page` and `limit` query params.\n    \n\n---\n\n### 📋 `GET /api/analytics/seller/my-auctions`\n\nReturns paginated list of the seller’s auctions.\n\n- Same logic as `getMyItems`, but for auctions."
				}
			]
		}
	]
}